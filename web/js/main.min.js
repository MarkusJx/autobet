const startstop=document.getElementById("startstop");mdc.ripple.MDCRipple.attachTo(startstop);const configurebutton=document.getElementById("configurebutton");mdc.ripple.MDCRipple.attachTo(configurebutton);const settingsdialog=new mdc.dialog.MDCDialog(document.getElementById("settingsdialog")),datasaverdialog=new mdc.dialog.MDCDialog(document.getElementById("datasaverdialog")),enabledatasaverbutton=document.getElementById("enabledatasaverbutton"),gtanotrunningmessage=new mdc.snackbar.MDCSnackbar(document.getElementById("gta-not-running-message"));gtanotrunningmessage.timeoutMs=1e4;const notconnectedmessage=new mdc.snackbar.MDCSnackbar(document.getElementById("notconnectedmessage"));notconnectedmessage.timeoutMs=1e4;const notconnectedlabel=document.getElementById("notconnectedlabel"),settingsdonebutton=document.getElementById("settingsdonebutton"),timeinput=document.getElementById("timeinput"),moneyinput=document.getElementById("moneyinput"),autostopenabled=document.getElementById("autostopenabled"),autostopstatusmessage=new mdc.snackbar.MDCSnackbar(document.getElementById("autostopstatusmessage"));autostopstatusmessage.timeoutMs=5e3;const autostopstatuslabel=document.getElementById("autostopstatuslabel"),moneyall=document.getElementById("moneyall"),timeDisp=document.getElementById("time"),winprobability=document.getElementById("winprobability"),raceswon=document.getElementById("raceswon"),moneythishour=document.getElementById("moneythishour"),statusinfo=document.getElementById("statusinfo"),moneythissession=document.getElementById("moneythissession");var lastTime=0,start=!0,initialized=!1,scriptRunning=-1,autostopTime=-1,autostopMoney=-1;let gtaRunning=!1,racesWon=0,racesLost=0;function showAutostopMessages(){-1!=autostopMoney&&-1!=autostopTime?(autostopenabled.classList="text maintext status_running",autostopenabled.innerText="Enabled",autostopstatuslabel.innerText="Autostop money value set to: "+autostopMoney+" and time set to: "+timeinput.value,autostopstatusmessage.open()):-1!=autostopTime||-1!=autostopMoney?(-1!=autostopTime?(autostopstatuslabel.innerText="Autostop time set to: "+timeinput.value,autostopstatusmessage.open()):(autostopstatuslabel.innerText="Autostop money value set to: "+autostopMoney,autostopstatusmessage.open()),autostopenabled.classList="text maintext status_running",autostopenabled.innerText="Enabled"):(autostopenabled.classList="text maintext status_stopped",autostopenabled.innerText="Disabled",autostopstatuslabel.innerText="Autostop is now disabled",autostopstatusmessage.open())}startstop.addEventListener("click",()=>{console.log("Running: "+gtaRunning),gtaRunning?null!=start&&(startstop.disabled=!0,!0===start?cppJsLib.js_start_script():cppJsLib.js_stop_script()):(gtanotrunningmessage.open(),startstop.disabled=!0)}),configurebutton.addEventListener("click",(function(){moneyinput.value=-1!==autostopMoney?autostopMoney:"",timeinput.value=-1!==autostopTime?Math.floor(autostopTime/3600)+":"+Math.floor(autostopTime%3600/60):"",settingsdialog.open()})),gtanotrunningmessage.listen("MDCSnackbar:closing",()=>{0===scriptRunning&&2===scriptRunning||(startstop.disabled=!1)}),notconnectedmessage.listen("MDCSnackbar:closing",()=>{let lastMessage=notconnectedlabel.innerText;notconnectedlabel.innerText="",notconnectedmessage.open(),notconnectedlabel.innerText=lastMessage}),settingsdonebutton.addEventListener("click",(function(){moneyinput.value<1e4||""===moneyinput.value?(moneyinput.value="",autostopMoney=-1,cppJsLib.set_autostop_money(-1)):(autostopMoney=moneyinput.value,cppJsLib.set_autostop_money(parseInt(moneyinput.value,10)));let timeval=timeinput.value.split(":");timeval=3600*timeval[0]+60*timeval[1],Number.isNaN(timeval)?(timeinput.value="",autostopTime=-1,cppJsLib.set_autostop_time(-1)):(autostopTime=timeval,cppJsLib.set_autostop_time(timeval)),showAutostopMessages()}));let x=setInterval((function(){cppJsLib.connected?(null!=x&&clearInterval(x),x=null,console.log("Connected!"),main()):console.log("Still connecting...")}),100),hasDisconnectListener=!1;function makeSumsDisplayable(sum,k=!1,fractionDigits=2){const negative=sum<0;let res;return res=(sum=Math.abs(sum))>=1e9?(sum/1e9).toFixed(fractionDigits)+"B":sum>=1e6?(sum/1e6).toFixed(fractionDigits)+"M":k&&sum>=1e3?(sum/1e3).toFixed(fractionDigits)+"K":sum,negative?"-$"+res:"$"+res}function main(){isMobile()?console.log("Running on a mobile device"):console.log("Running on a desktop device"),initialized||init(),initialized=!0}async function loadData(){cppJsLib.get_current_winnings().then(val=>{moneythissession.innerText=makeSumsDisplayable(val,!1)}),cppJsLib.get_all_winnings().then(val=>{console.log("Money earned all time: "+val),moneyall.innerText=makeSumsDisplayable(val)}),cppJsLib.get_time().then(t=>{t!==lastTime&&(timeDisp.innerText=convertToTime(t),lastTime=t)});let won=Number(await cppJsLib.get_races_won());racesWon=won,raceswon.innerText=won,cppJsLib.get_races_lost().then(lost=>{lost=Number(lost),racesLost=lost,won+lost>0&&(winprobability.innerText=Math.round(won/(won+lost)*1e3)/10+"%")}),cppJsLib.get_current_winnings().then(moneyMade=>{moneythissession.innerText=makeSumsDisplayable(moneyMade,!1),lastTime>0&&(moneythishour.innerText=makeSumsDisplayable(moneyMade*(3600/lastTime),!0,0)+"/hr")}),cppJsLib.get_all_winnings().then(allMoney=>{moneyall.innerText=makeSumsDisplayable(allMoney)}),cppJsLib.get_running().then(running=>{let statusChanged=scriptRunning!==running;scriptRunning=running,statusChanged&&(gtanotrunningmessage.close(),1==running?(statusinfo.innerText="Running",statusinfo.className="text status_running maintext",startstop.innerText="stop",start=!1,startstop.disabled=!1,startTimer()):-1==running?(statusinfo.innerText="Stopped",statusinfo.className="text status_stopped maintext",startstop.innerText="start",startstop.disabled=!1):0==running?(statusinfo.innerText="Stopping",statusinfo.className="text status_stopping maintext",startstop.disabled=!0,startTimer()):2==running&&(statusinfo.innerText="Starting",statusinfo.className="text status_stopping maintext",startstop.disabled=!0,startTimer()))}),await getAutostopSettings()}function handleVisibilityChange(){let hidden,visibilityChange;void 0!==document.hidden?(hidden="hidden",visibilityChange="visibilitychange"):void 0!==document.msHidden?(hidden="msHidden",visibilityChange="msvisibilitychange"):void 0!==document.webkitHidden&&(hidden="webkitHidden",visibilityChange="webkitvisibilitychange"),void 0===document.addEventListener||void 0===hidden?console.warn("This browser does not support the PageVisibility API"):document.addEventListener(visibilityChange,()=>{document[hidden]?stopTimer():(console.log("Reloading data"),loadData().then(()=>console.log("Data reloaded")))},!1)}async function init(){function webSetGtaRunning(val){gtaRunning=val;const el=document.getElementById("game-running-info");el.innerText=val?"Yes":"No",val?(el.classList.remove("status_stopped"),el.classList.add("status_running")):(el.classList.remove("status_running"),el.classList.add("status_stopped"))}function webSetWinnings(moneyMade){moneythissession.innerText=makeSumsDisplayable(moneyMade,!1),lastTime>0&&(moneythishour.innerText=makeSumsDisplayable(moneyMade*(3600/lastTime),!0,0)+"/hr")}function webSetWinningsAll(allMoney){moneyall.innerText=makeSumsDisplayable(allMoney)}function webSetRacesWon(won){raceswon.innerText=won,racesWon=Number(won),racesWon+racesLost>0&&(winprobability.innerText=Math.round(racesWon/(racesWon+racesLost)*1e3)/10+"%")}function webSetRacesLost(lost){racesLost=Number(lost),racesWon+racesLost>0&&(winprobability.innerText=Math.round(racesWon/(racesWon+racesLost)*1e3)/10+"%")}function webSetStarted(){statusinfo.innerText="Running",statusinfo.className="text status_running maintext",startstop.innerText="stop",start=!1,startstop.disabled=!1,cppJsLib.get_time().then(t=>{t!==lastTime&&(timeDisp.innerText=convertToTime(t),lastTime=t),startTimer()})}function webSetStopped(){statusinfo.innerText="Stopped",statusinfo.className="text status_stopped maintext",startstop.innerText="start",startstop.disabled=!1,stopTimer()}function webSetStopping(){statusinfo.innerText="Stopping",statusinfo.className="text status_stopping maintext",startstop.disabled=!0}function webSetStarting(){statusinfo.innerText="Starting",statusinfo.className="text status_stopping maintext",startstop.disabled=!0}function webSetAutostopMoney(val){val!==autostopMoney&&(autostopMoney=val,showAutostopMessages())}function webSetAutostopTime(val){val!==autostopTime&&(autostopTime=nTime,showAutostopMessages())}await loadData(),handleVisibilityChange(),cppJsLib.expose(webSetGtaRunning),cppJsLib.expose(webSetWinnings),cppJsLib.expose(webSetWinningsAll),cppJsLib.expose(webSetRacesWon),cppJsLib.expose(webSetRacesLost),cppJsLib.expose(webSetStarted),cppJsLib.expose(webSetStopped),cppJsLib.expose(webSetStopping),cppJsLib.expose(webSetStarting),cppJsLib.expose(webSetAutostopMoney),cppJsLib.expose(webSetAutostopTime)}cppJsLib.listen("loaded",(function(res){res&&(null!=x&&clearInterval(x),x=null,console.log("Connected!"),hasDisconnectListener||(cppJsLib.listen("disconnected",disconnected),hasDisconnectListener=!0),main())}));let timer=null;function startTimer(){null==timer&&(timer=setInterval(()=>{lastTime++,timeDisp.innerText=convertToTime(lastTime)},1e3))}function stopTimer(){null!=timer&&(clearInterval(timer),timer=null)}function disconnected(){console.log("Connection lost.");let timeUntilRetry=10;notconnectedlabel.innerText="Connection lost.",notconnectedmessage.open();let x=setInterval(async()=>{timeUntilRetry<1?(notconnectedlabel.innerText="Trying to reconnect...",timeUntilRetry=5,cppJsLib.connected&&(null!=x&&clearInterval(x),x=null,notconnectedlabel.innerText="Reconnected. Reloading page in 3 seconds",setTimeout(()=>{location.reload()},3e3))):(notconnectedlabel.innerText="Connection lost. Retrying in "+timeUntilRetry+" seconds.",startstop.disabled=!0,timeUntilRetry--)},1e3)}async function getAutostopSettings(){cppJsLib.get_autostop_time().then(nTime=>{cppJsLib.get_autostop_money().then(nMoney=>{nTime!==autostopTime||nMoney!==autostopMoney?(autostopTime=nTime,autostopMoney=nMoney,showAutostopMessages()):(autostopTime=nTime,autostopMoney=nMoney)})})}function convertToTime(secs){let hours=Math.floor(secs%86400/3600),minutes=Math.floor(secs%3600/60),seconds=secs%60;return hours=hours<10?"0"+hours:hours,minutes=minutes<10?"0"+minutes:minutes,seconds=seconds<10?"0"+seconds:seconds,hours+":"+minutes+":"+seconds}function isMobile(){try{return!!/Android|webOS|iPhone|iPad|iPod|pocket|psp|kindle|avantgo|blazer|midori|Tablet|Palm|maemo|plucker|phone|BlackBerry|symbian|IEMobile|mobile|ZuneWP7|Windows Phone|Opera Mini/i.test(navigator.userAgent)}catch(e){return console.log("Error in isMobile"),!1}}